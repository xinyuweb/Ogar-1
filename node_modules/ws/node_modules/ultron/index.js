function Ultron(t) {
 return this instanceof Ultron ? (this.id = id++, void(this.ee = t)) : new Ultron(t)
}
var has = Object.prototype.hasOwnProperty,
 id = 0;
Ultron.prototype.on = function(t, e, n) {
 return e.__ultron = this.id, this.ee.on(t, e, n), this
}, Ultron.prototype.once = function(t, e, n) {
 return e.__ultron = this.id, this.ee.once(t, e, n), this
}, Ultron.prototype.remove = function() {
 var t, e = arguments;
 if (1 === e.length && "string" == typeof e[0]) e = e[0].split(/[, ]+/);
 else if (!e.length) {
  e = [];
  for (t in this.ee._events) has.call(this.ee._events, t) && e.push(t)
 }
 for (var n = 0; n < e.length; n++)
  for (var r = this.ee.listeners(e[n]), i = 0; i < r.length; i++) {
   if (t = r[i], t.listener) {
    if (t.listener.__ultron !== this.id) continue;
    delete t.listener.__ultron
   } else {
    if (t.__ultron !== this.id) continue;
    delete t.__ultron
   }
   this.ee.removeListener(e[n], t)
  }
 return this
}, Ultron.prototype.destroy = function() {
 return this.ee ? (this.remove(), this.ee = null, !0) : !1
}, module.exports = Ultron;